(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{415:function(a,t,s){"use strict";s.r(t);var e=s(34),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"日期框"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日期框"}},[a._v("#")]),a._v(" 日期框")]),a._v(" "),s("h2",{attrs:{id:"组件名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件名"}},[a._v("#")]),a._v(" 组件名")]),a._v(" "),s("p",[s("code",[a._v("DateBox")])]),a._v(" "),s("h2",{attrs:{id:"配置项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置项"}},[a._v("#")]),a._v(" 配置项")]),a._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"DateBox"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"label"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"日期框"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"explain"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"conf"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"value-format"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"yyyy-MM-dd"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"clearable"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h3",{attrs:{id:"name"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#name"}},[a._v("#")]),a._v(" name")]),a._v(" "),s("p",[a._v("当容器组件为表单(FormView)时, name表示此表单项的prop, 必须与表单数据model中对应的key一致。")]),a._v(" "),s("h3",{attrs:{id:"label"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#label"}},[a._v("#")]),a._v(" label")]),a._v(" "),s("p",[a._v("当容器组件为表单时(FormView)，label表示表单项的中文显示。")]),a._v(" "),s("p",[a._v("当容器组件为TableView或TableTreeView时，label表示为表格header中文列名。")]),a._v(" "),s("h3",{attrs:{id:"explain"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#explain"}},[a._v("#")]),a._v(" explain")]),a._v(" "),s("p",[a._v("说明。")]),a._v(" "),s("p",[a._v("容器组件为表单时(FormView)，表示表单项目中文显示旁的补充说明。")]),a._v(" "),s("h3",{attrs:{id:"conf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conf"}},[a._v("#")]),a._v(" conf")]),a._v(" "),s("p",[a._v("此项配置为ElementUI "),s("code",[a._v("el-date-picker")]),a._v("原生配置`")]),a._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[a._v("WARNING")]),a._v(" "),s("p",[a._v("注意: "),s("code",[a._v("conf.value-format")]),a._v(" 格式最好不要更改, 这个值的格式涉及到服务端的时间序列化, dbmeta为"),s("code",[a._v("LocalDate")]),a._v("默认的日期序列化格式就是"),s("code",[a._v("yyyy-MM-dd")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);