<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.md</groupId>
    <artifactId>db-metadata-parent</artifactId>
    <version>2.4-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>db-metadata-parent</name>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <spring-boot.version>2.5.4</spring-boot.version>
        <lombok.version>1.18.20</lombok.version>
        <fastjson.version>1.2.83</fastjson.version>
        <druid.version>1.2.6</druid.version>
        <activerecord.version>4.9.16</activerecord.version>
        <guava.version>30.1.1-jre</guava.version>
        <hutool.version>5.7.20</hutool.version>
        <mysql-connector-java.version>5.1.48</mysql-connector-java.version>
    </properties>

    <modules>
        <module>../db-metadata-interface</module>
        <module>../db-metadata-server-springboot</module>
        <module>../db-metadata-analysis-springboot</module>
    </modules>

    <scm>
        <connection>scm:git:https://github.com/pengxianggui/db-metadata.git</connection>
        <developerConnection>scm:git:https://github.com/pengxianggui/db-metadata.git</developerConnection>
        <url>https://github.com/pengxianggui/db-metadata/tree/master</url>
        <tag>HEAD</tag>
    </scm>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.github.md</groupId>
                <artifactId>db-metadata-interface</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.md</groupId>
                <artifactId>db-metadata-analysis-springboot</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>com.jfinal</groupId>
                <artifactId>activerecord</artifactId>
                <version>${activerecord.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>1.7.30</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-crypto</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-http</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-jwt</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.2.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.10.1</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.7</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <configuration>
                    <generateBackupPoms>false</generateBackupPoms>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <configuration>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <pluginRepositories>
        <pluginRepository>
            <id>maven-ali</id>
            <name>aliyun maven</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <!-- 配置maven远程仓库，若本地找不到，则会从这里配置的远程仓库寻找依赖，最后是中央仓库 -->
    <repositories>
        <repository>
            <id>maven-ali</id>
            <name>阿里云远程maven仓库</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <layout>default</layout> <!--用于定位和排序构件的仓库布局类型-可以是default（默认）或者legacy（遗留）-->
            <releases>
                <enabled>true</enabled> <!--可从此仓库下载releases版本的依赖-->
            </releases>
            <snapshots>
                <enabled>false</enabled> <!--禁止从此仓库下载shapshots版本的依赖，公共仓库的snapshot版本往往不稳定且不受控制-->
<!--                <updatePolicy>always</updatePolicy>--> <!-- 上面设置为false后，这两条配置就没意义了，注释掉 -->
<!--                <checksumPolicy>warn</checksumPolicy>-->
            </snapshots>
        </repository>
    </repositories>

    <!-- 配置打包发布的远程仓库 TODO 还没整好，参考：https://juejin.cn/post/7160481629318676511 -->
    <distributionManagement>
        <repository>
            <id>sonatype-nexus-staging</id>
            <name>Nexus Release Repository</name>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>

        <snapshotRepository>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
</project>
